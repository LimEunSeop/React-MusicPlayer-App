// --------------------------------------------------------------------------
// MusicPlayer.module.scss
// Module CSS를 사용하는 이유 → 간단하지만, 고유한(hash) 클래스 이름 설정(충돌 방지)
// --------------------------------------------------------------------------

/* 
  container [,playing]
    info
      title
      progressBar
        progress
    audio
    coverWrapper
      cover
    controller
      (prev) button
      (playPause) button bigSize
      (next) button
*/

// 변수 -----------------------------------------------------------------------

$white: #fff !default;
$shadow-color: rgba(#fff6cb, 0.6) !default;
$easeInOutQuint: cubic-bezier(0.860, 0.000, 0.070, 1.000) !default;
$easeInOutCirc: cubic-bezier(0.785, 0.135, 0.150, 0.860) !default;

$point-color: #ffe657; // getColor('point');
$progressBar-bg-color: #fcf5cf;
$coverWrapper-bg-color: #fefcfd;
$cover-border-color: #e8ca92;
$bigSize-color: #d0cdc2;

// --------------------------------------------------------------------------

.container {
  display: flex;
  position: relative;
  z-index: 10;
  margin: 100px 0;
  border-radius: 15px;
  padding: 1.25em 1.875em;
  background-color: $white;
  box-shadow: 0 10px 20px 0 $shadow-color;
  transition: all 0.6s ease-out;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 20px 0 $shadow-color;
  }

}


.info {
  opacity: 0;
  position: absolute;
  z-index: 0;
  top: 0;
  left: 10px;
  width: calc(100% - 20px);
  border-radius: 15px 15px 0 0;
  padding: 20px 20px 10px 140px;
  background-color: rgba($white, 0.5);
  border: 1px solid $white;
  transform: translateY(0%);
  transition: 
    transform 0.45s $easeInOutQuint,
    opacity 0.45s $easeInOutQuint;
  
  // .container.playing 상태의 .info 스타일링
  .playing & {
    opacity: 1;
    transform: translateY(-90%);
  }
}


.title {
  margin: 0;
  font-size: 11px;
}


.progressBar {
  cursor: pointer;
  width: 100%;
  height: 4px;
  margin: 10px 0;
  border-radius: 5px;
  background: $progressBar-bg-color;
}

.progress {
  width: 0%;
  height: 100%;
  border-radius: 5px;
  background-color: $point-color;
  transition: width 0.1s linear;
}


.coverWrapper {
  position: relative;
  width: 110px;
  margin: 0;

  &::after {
    content: '';
    position: absolute;
    bottom: 100%;
    left: 50%;
    width: 20px;
    height: 20px;
    border-radius: 10px;
    background-color: $coverWrapper-bg-color;
    transform: translate(-50%, 100%);
  }

}

.cover {
  position: absolute;
  bottom: 0;
  left: 0;
  width: inherit;
  height: 110px;
  border-radius: 50%;
  object-fit: cover;
  animation: rotate 15s linear infinite;
  animation-play-state: paused;
  border: 2px solid rgba($cover-border-color, 0.3);
  
  // .container.playing 상태의 .cover 스타일링
  .playing & {
    animation-play-state: running;
  }

}


.controller {
  z-index: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}


.button {
  cursor: pointer;
  margin: 0 20px;
  border: 0;
  padding: 0.5em;
  background-color: transparent;
  color: #dfdddb;
  font-size: 20px;
  transition: transform 0.3s $easeInOutCirc;
  
  &:focus {
    outline: none;
    transform: scale(1.2);
    color: rgba(36, 33, 33, 0.719);
  }
}

.bigSize {
  font-size: 30px;
  color: $bigSize-color;
}


@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
